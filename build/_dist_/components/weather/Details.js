import './Details.css.proxy.js';
/* src\components\weather\Details.svelte generated by Svelte v3.31.2 */
import {
	SvelteComponent,
	action_destroyer,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	run_all,
	safe_not_equal,
	set_data,
	set_style,
	space,
	text
} from "../../../web_modules/svelte/internal.js";

import injectSVG from "../../actions/injectSVG.js";

function create_fragment(ctx) {
	let section;
	let article0;
	let div0;
	let figure0;
	let img0;
	let img0_src_value;
	let injectSVG_action;
	let t0;
	let div3;
	let div1;

	let t1_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
	? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].pressure
	: "") + "";

	let t1;
	let t2;
	let div2;
	let t4;
	let article1;
	let div4;
	let figure1;
	let img1;
	let img1_src_value;
	let injectSVG_action_1;
	let t5;
	let div7;
	let div5;

	let t6_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
	? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].visibility
	: "") + "";

	let t6;
	let t7;
	let div6;
	let t9;
	let article2;
	let div8;
	let figure2;
	let img2;
	let img2_src_value;
	let injectSVG_action_2;
	let t10;
	let div11;
	let div9;

	let t11_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
	? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].feelsLike
	: "") + "";

	let t11;
	let t12_value = /*tempUnit*/ ctx[3][/*units*/ ctx[2]] + "";
	let t12;
	let t13;
	let div10;
	let t15;
	let article3;
	let div12;
	let figure3;
	let img3;
	let img3_src_value;
	let injectSVG_action_3;
	let t16;
	let div15;
	let div13;

	let t17_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
	? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].UVIndex
	: "") + "";

	let t17;
	let t18;
	let div14;
	let t20;
	let article4;
	let div16;
	let figure4;
	let img4;
	let img4_src_value;
	let injectSVG_action_4;
	let t21;
	let div19;
	let div17;

	let t22_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
	? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].windSpeed
	: "") + "";

	let t22;
	let t23;
	let div18;
	let t25;
	let article5;
	let div20;
	let figure5;
	let img5;
	let img5_src_value;
	let injectSVG_action_5;
	let t26;
	let div23;
	let div21;

	let t27_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
	? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].humidity
	: "") + "";

	let t27;
	let t28;
	let div22;
	let mounted;
	let dispose;

	return {
		c() {
			section = element("section");
			article0 = element("article");
			div0 = element("div");
			figure0 = element("figure");
			img0 = element("img");
			t0 = space();
			div3 = element("div");
			div1 = element("div");
			t1 = text(t1_value);
			t2 = space();
			div2 = element("div");
			div2.textContent = "Pressure";
			t4 = space();
			article1 = element("article");
			div4 = element("div");
			figure1 = element("figure");
			img1 = element("img");
			t5 = space();
			div7 = element("div");
			div5 = element("div");
			t6 = text(t6_value);
			t7 = space();
			div6 = element("div");
			div6.textContent = "Visibility";
			t9 = space();
			article2 = element("article");
			div8 = element("div");
			figure2 = element("figure");
			img2 = element("img");
			t10 = space();
			div11 = element("div");
			div9 = element("div");
			t11 = text(t11_value);
			t12 = text(t12_value);
			t13 = space();
			div10 = element("div");
			div10.textContent = "Feels-like";
			t15 = space();
			article3 = element("article");
			div12 = element("div");
			figure3 = element("figure");
			img3 = element("img");
			t16 = space();
			div15 = element("div");
			div13 = element("div");
			t17 = text(t17_value);
			t18 = space();
			div14 = element("div");
			div14.textContent = "UV Index";
			t20 = space();
			article4 = element("article");
			div16 = element("div");
			figure4 = element("figure");
			img4 = element("img");
			t21 = space();
			div19 = element("div");
			div17 = element("div");
			t22 = text(t22_value);
			t23 = space();
			div18 = element("div");
			div18.textContent = "Wind";
			t25 = space();
			article5 = element("article");
			div20 = element("div");
			figure5 = element("figure");
			img5 = element("img");
			t26 = space();
			div23 = element("div");
			div21 = element("div");
			t27 = text(t27_value);
			t28 = space();
			div22 = element("div");
			div22.textContent = "Humidity";
			if (img0.src !== (img0_src_value = "./icons/cards/pressure.svg")) attr(img0, "src", img0_src_value);
			attr(img0, "alt", "Pressure icon");
			attr(img0, "class", "card__icon svelte-42055u");
			attr(img0, "height", "30px");
			attr(img0, "width", "30px");
			attr(figure0, "class", "card__figure svelte-42055u");
			attr(div0, "class", "card__header svelte-42055u");
			attr(div1, "class", "card__value svelte-42055u");
			attr(div2, "class", "card__description");
			attr(div3, "class", "card__body");
			attr(article0, "class", "card svelte-42055u");
			if (img1.src !== (img1_src_value = "./icons/cards/visibility.svg")) attr(img1, "src", img1_src_value);
			attr(img1, "alt", "Visibility icon");
			attr(img1, "class", "card__icon svelte-42055u");
			attr(img1, "height", "30px");
			attr(img1, "width", "30px");
			attr(figure1, "class", "card__figure svelte-42055u");
			attr(div4, "class", "card__header svelte-42055u");
			attr(div5, "class", "card__value svelte-42055u");
			attr(div6, "class", "card__description");
			attr(div7, "class", "card__body");
			attr(article1, "class", "card svelte-42055u");
			if (img2.src !== (img2_src_value = "./icons/cards/feels-like.svg")) attr(img2, "src", img2_src_value);
			attr(img2, "alt", "feels-like icon");
			attr(img2, "class", "card__icon svelte-42055u");
			attr(img2, "height", "30px");
			attr(img2, "width", "30px");
			attr(figure2, "class", "card__figure svelte-42055u");
			attr(div8, "class", "card__header svelte-42055u");
			attr(div9, "class", "card__value svelte-42055u");
			attr(div10, "class", "card__description");
			attr(div11, "class", "card__body");
			attr(article2, "class", "card svelte-42055u");
			if (img3.src !== (img3_src_value = "./icons/cards/uv.svg")) attr(img3, "src", img3_src_value);
			attr(img3, "alt", "UV Index icon");
			attr(img3, "class", "card__icon svelte-42055u");
			attr(img3, "height", "30px");
			attr(img3, "width", "30px");
			attr(figure3, "class", "card__figure svelte-42055u");
			attr(div12, "class", "card__header svelte-42055u");
			attr(div13, "class", "card__value svelte-42055u");
			attr(div14, "class", "card__description");
			attr(div15, "class", "card__body");
			attr(article3, "class", "card svelte-42055u");
			if (img4.src !== (img4_src_value = "./icons/cards/wind-speed.svg")) attr(img4, "src", img4_src_value);
			attr(img4, "alt", "Wind speed icon");
			attr(img4, "class", "card__icon svelte-42055u");
			attr(img4, "height", "30px");
			attr(img4, "width", "30px");
			attr(figure4, "class", "card__figure svelte-42055u");
			attr(div16, "class", "card__header svelte-42055u");
			attr(div17, "class", "card__value svelte-42055u");
			attr(div18, "class", "card__description");
			attr(div19, "class", "card__body");
			attr(article4, "class", "card svelte-42055u");

			set_style(article4, "--wind-degree", /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
			? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].windDegree
			: 0);

			if (img5.src !== (img5_src_value = "./icons/cards/humidity.svg")) attr(img5, "src", img5_src_value);
			attr(img5, "alt", "Humidity icon");
			attr(img5, "class", "card__icon svelte-42055u");
			attr(img5, "height", "30px");
			attr(img5, "width", "30px");
			attr(figure5, "class", "card__figure svelte-42055u");
			attr(div20, "class", "card__header svelte-42055u");
			attr(div21, "class", "card__value svelte-42055u");
			attr(div22, "class", "card__description");
			attr(div23, "class", "card__body");
			attr(article5, "class", "card svelte-42055u");
			attr(section, "class", "weather-details svelte-42055u");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, article0);
			append(article0, div0);
			append(div0, figure0);
			append(figure0, img0);
			append(article0, t0);
			append(article0, div3);
			append(div3, div1);
			append(div1, t1);
			append(div3, t2);
			append(div3, div2);
			append(section, t4);
			append(section, article1);
			append(article1, div4);
			append(div4, figure1);
			append(figure1, img1);
			append(article1, t5);
			append(article1, div7);
			append(div7, div5);
			append(div5, t6);
			append(div7, t7);
			append(div7, div6);
			append(section, t9);
			append(section, article2);
			append(article2, div8);
			append(div8, figure2);
			append(figure2, img2);
			append(article2, t10);
			append(article2, div11);
			append(div11, div9);
			append(div9, t11);
			append(div9, t12);
			append(div11, t13);
			append(div11, div10);
			append(section, t15);
			append(section, article3);
			append(article3, div12);
			append(div12, figure3);
			append(figure3, img3);
			append(article3, t16);
			append(article3, div15);
			append(div15, div13);
			append(div13, t17);
			append(div15, t18);
			append(div15, div14);
			append(section, t20);
			append(section, article4);
			append(article4, div16);
			append(div16, figure4);
			append(figure4, img4);
			append(article4, t21);
			append(article4, div19);
			append(div19, div17);
			append(div17, t22);
			append(div19, t23);
			append(div19, div18);
			append(section, t25);
			append(section, article5);
			append(article5, div20);
			append(div20, figure5);
			append(figure5, img5);
			append(article5, t26);
			append(article5, div23);
			append(div23, div21);
			append(div21, t27);
			append(div23, t28);
			append(div23, div22);

			if (!mounted) {
				dispose = [
					action_destroyer(injectSVG_action = injectSVG.call(null, img0)),
					action_destroyer(injectSVG_action_1 = injectSVG.call(null, img1)),
					action_destroyer(injectSVG_action_2 = injectSVG.call(null, img2)),
					action_destroyer(injectSVG_action_3 = injectSVG.call(null, img3)),
					action_destroyer(injectSVG_action_4 = injectSVG.call(null, img4)),
					action_destroyer(injectSVG_action_5 = injectSVG.call(null, img5))
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*hourly, hourlyIndex*/ 3 && t1_value !== (t1_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
			? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].pressure
			: "") + "")) set_data(t1, t1_value);

			if (dirty & /*hourly, hourlyIndex*/ 3 && t6_value !== (t6_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
			? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].visibility
			: "") + "")) set_data(t6, t6_value);

			if (dirty & /*hourly, hourlyIndex*/ 3 && t11_value !== (t11_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
			? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].feelsLike
			: "") + "")) set_data(t11, t11_value);

			if (dirty & /*units*/ 4 && t12_value !== (t12_value = /*tempUnit*/ ctx[3][/*units*/ ctx[2]] + "")) set_data(t12, t12_value);

			if (dirty & /*hourly, hourlyIndex*/ 3 && t17_value !== (t17_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
			? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].UVIndex
			: "") + "")) set_data(t17, t17_value);

			if (dirty & /*hourly, hourlyIndex*/ 3 && t22_value !== (t22_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
			? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].windSpeed
			: "") + "")) set_data(t22, t22_value);

			if (dirty & /*hourly, hourlyIndex*/ 3) {
				set_style(article4, "--wind-degree", /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
				? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].windDegree
				: 0);
			}

			if (dirty & /*hourly, hourlyIndex*/ 3 && t27_value !== (t27_value = (/*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]]
			? /*hourly*/ ctx[0][/*hourlyIndex*/ ctx[1]].humidity
			: "") + "")) set_data(t27, t27_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { hourly } = $$props;
	let { hourlyIndex } = $$props;
	let { units } = $$props;

	// tempUnit[units] ({ units } = $databaseStore.settings) is used to display 'C'/'F'
	const tempUnit = { metric: "C", imperial: "F" };

	$$self.$$set = $$props => {
		if ("hourly" in $$props) $$invalidate(0, hourly = $$props.hourly);
		if ("hourlyIndex" in $$props) $$invalidate(1, hourlyIndex = $$props.hourlyIndex);
		if ("units" in $$props) $$invalidate(2, units = $$props.units);
	};

	return [hourly, hourlyIndex, units, tempUnit];
}

class Details extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { hourly: 0, hourlyIndex: 1, units: 2 });
	}
}

export default Details;