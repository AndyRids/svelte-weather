import './MainView.css.proxy.js';
/* src\components\views\MainView.svelte generated by Svelte v3.31.2 */
import {
	SvelteComponent,
	add_flush_callback,
	attr,
	bind,
	binding_callbacks,
	check_outros,
	create_component,
	destroy_component,
	detach,
	element,
	group_outros,
	init,
	insert,
	mount_component,
	safe_not_equal,
	transition_in,
	transition_out
} from "../../../web_modules/svelte/internal.js";

import SearchLocation from "../search/SearchLocation.js";
import Weather from "../weather/Weather.js";

function create_fragment(ctx) {
	let section;
	let switch_instance;
	let updating_componentName;
	let current;

	function switch_instance_componentName_binding(value) {
		/*switch_instance_componentName_binding*/ ctx[2].call(null, value);
	}

	var switch_value = /*components*/ ctx[1][/*componentName*/ ctx[0]];

	function switch_props(ctx) {
		let switch_instance_props = {};

		if (/*componentName*/ ctx[0] !== void 0) {
			switch_instance_props.componentName = /*componentName*/ ctx[0];
		}

		return { props: switch_instance_props };
	}

	if (switch_value) {
		switch_instance = new switch_value(switch_props(ctx));
		binding_callbacks.push(() => bind(switch_instance, "componentName", switch_instance_componentName_binding));
	}

	return {
		c() {
			section = element("section");
			if (switch_instance) create_component(switch_instance.$$.fragment);
			attr(section, "class", "main-view svelte-15tvf07");
		},
		m(target, anchor) {
			insert(target, section, anchor);

			if (switch_instance) {
				mount_component(switch_instance, section, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			const switch_instance_changes = {};

			if (!updating_componentName && dirty & /*componentName*/ 1) {
				updating_componentName = true;
				switch_instance_changes.componentName = /*componentName*/ ctx[0];
				add_flush_callback(() => updating_componentName = false);
			}

			if (switch_value !== (switch_value = /*components*/ ctx[1][/*componentName*/ ctx[0]])) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;

					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});

					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props(ctx));
					binding_callbacks.push(() => bind(switch_instance, "componentName", switch_instance_componentName_binding));
					create_component(switch_instance.$$.fragment);
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, section, null);
				} else {
					switch_instance = null;
				}
			} else if (switch_value) {
				switch_instance.$set(switch_instance_changes);
			}
		},
		i(local) {
			if (current) return;
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
			current = true;
		},
		o(local) {
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(section);
			if (switch_instance) destroy_component(switch_instance);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let componentName = "Weather";

	// reference to imported weather components
	const components = { Weather, SearchLocation };

	function switch_instance_componentName_binding(value) {
		componentName = value;
		$$invalidate(0, componentName);
	}

	return [componentName, components, switch_instance_componentName_binding];
}

class MainView extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default MainView;